# Generated by Django 3.2.20 on 2023-09-05 05:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import parsers.models.document
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConvertToTableBySpecifyHeaders',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('guid', models.CharField(default=uuid.uuid4, max_length=255)),
            ],
            options={
                'db_table': 'convert_to_table_by_specify_headers',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('guid', models.CharField(default=uuid.uuid4, max_length=255)),
                ('file', models.FileField(null=True, upload_to=parsers.models.document.Document.file_upload_to)),
                ('document_type', models.CharField(choices=[('PDF', 'PDF'), ('PNG', 'PNG'), ('JPG', 'JPG'), ('GIF', 'GIF'), ('TIFF', 'TIFF')], max_length=255)),
                ('filename_without_extension', models.CharField(max_length=255)),
                ('extension', models.CharField(max_length=255)),
                ('total_page_num', models.IntegerField()),
                ('last_modified_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'documents',
            },
        ),
        migrations.CreateModel(
            name='Parser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('guid', models.CharField(default=uuid.uuid4, max_length=255)),
                ('type', models.CharField(choices=[('LAYOUT', 'LAYOUT'), ('ROUTING', 'ROUTING')], max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('last_modified_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'parsers',
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('guid', models.CharField(default=uuid.uuid4, max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('rule_type', models.CharField(choices=[('INPUT_TEXTFIELD', 'INPUT_TEXTFIELD'), ('INPUT_DROPDOWN', 'INPUT_DROPDOWN'), ('TEXTFIELD', 'TEXTFIELD'), ('ANCHORED_TEXTFIELD', 'ANCHORED_TEXTFIELD'), ('TABLE', 'TABLE')], max_length=255)),
                ('pages', models.CharField(max_length=255)),
                ('x1', models.DecimalField(decimal_places=2, max_digits=10)),
                ('y1', models.DecimalField(decimal_places=2, max_digits=10)),
                ('x2', models.DecimalField(decimal_places=2, max_digits=10)),
                ('y2', models.DecimalField(decimal_places=2, max_digits=10)),
                ('anchor_text', models.CharField(max_length=255, null=True)),
                ('anchor_x1', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('anchor_y1', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('anchor_x2', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('anchor_y2', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('last_modified_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('parser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='parsers.parser')),
            ],
            options={
                'db_table': 'rules',
            },
        ),
        migrations.CreateModel(
            name='TableColumnSeparator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('x', models.DecimalField(decimal_places=2, max_digits=10)),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='table_column_separators', to='parsers.rule')),
            ],
            options={
                'db_table': 'table_column_separators',
            },
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('guid', models.CharField(default=uuid.uuid4, max_length=255)),
                ('step', models.IntegerField()),
                ('type', models.CharField(choices=[('TEXTFIELD', 'TEXTFIELD'), ('TABLE', 'TABLE')], max_length=255)),
                ('stream_class', models.CharField(choices=[('EXTRACT_FIRST_N_LINES', 'EXTRACT_FIRST_N_LINES'), ('EXTRACT_NTH_LINES', 'EXTRACT_NTH_LINES'), ('REGEX_EXTRACT', 'REGEX_EXTRACT'), ('REGEX_REPLACE', 'REGEX_REPLACE'), ('TRIM_SPACE', 'TRIM_SPACE'), ('REMOVE_TEXT_BEFORE_START_OF_TEXT', 'REMOVE_TEXT_BEFORE_START_OF_TEXT'), ('REMOVE_TEXT_BEFORE_END_OF_TEXT', 'REMOVE_TEXT_BEFORE_END_OF_TEXT'), ('REMOVE_TEXT_AFTER_START_OF_TEXT', 'REMOVE_TEXT_AFTER_START_OF_TEXT'), ('REMOVE_TEXT_AFTER_END_OF_TEXT', 'REMOVE_TEXT_AFTER_END_OF_TEXT'), ('REPLACE_TEXT', 'REPLACE_TEXT'), ('REPLACE_REGEX', 'REPLACE_REGEX'), ('JOIN_ALL_ROWS', 'JOIN_ALL_ROWS'), ('COMBINE_FIRST_N_LINES', 'COMBINE_FIRST_N_LINES'), ('GET_CHARS_FROM_NEXT_COL_IF_REGEX_NOT_MATCH', 'GET_CHARS_FROM_NEXT_COL_IF_REGEX_NOT_MATCH'), ('TRIM_SPACE_FOR_ALL_ROWS_AND_COLS', 'TRIM_SPACE_FOR_ALL_ROWS_AND_COLS'), ('REMOVE_ROWS_WITH_CONDITIONS', 'REMOVE_ROWS_WITH_CONDITIONS'), ('MERGE_ROWS_WITH_CONDITIONS', 'MERGE_ROWS_WITH_CONDITIONS'), ('MERGE_ROWS_WITH_SAME_COLUMNS', 'MERGE_ROWS_WITH_SAME_COLUMNS'), ('REMOVE_ROWS_BEFORE_ROW_WITH_CONDITIONS', 'REMOVE_ROWS_BEFORE_ROW_WITH_CONDITIONS'), ('REMOVE_ROWS_AFTER_ROW_WITH_CONDITIONS', 'REMOVE_ROWS_AFTER_ROW_WITH_CONDITIONS'), ('UNPIVOT_TABLE', 'UNPIVOT_TABLE'), ('MAKE_FIRST_ROW_TO_BE_HEADER', 'MAKE_FIRST_ROW_TO_BE_HEADER'), ('REMOVE_EMPTY_LINES', 'REMOVE_EMPTY_LINES'), ('CONVERT_TO_TABLE_BY_SPECIFY_HEADERS', 'CONVERT_TO_TABLE_BY_SPECIFY_HEADERS')], max_length=255)),
                ('text', models.TextField(blank=True, default='', max_length=1023, null=True)),
                ('regex', models.TextField(blank=True, default='', max_length=1023, null=True)),
                ('join_string', models.TextField(blank=True, default='', max_length=1023, null=True)),
                ('extract_first_n_lines', models.IntegerField(default=1)),
                ('extract_nth_lines', models.TextField(blank=True, default='', null=True)),
                ('combine_first_n_lines', models.IntegerField(blank=True, default=2, null=True)),
                ('convert_to_table_by_specify_headers', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parsers.converttotablebyspecifyheaders')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='streams', to='parsers.rule')),
            ],
            options={
                'db_table': 'streams',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('source_path', models.CharField(max_length=1023)),
                ('interval_seconds', models.IntegerField()),
                ('next_run_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('activated', models.BooleanField(default=True)),
                ('parser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sources', to='parsers.parser')),
            ],
            options={
                'db_table': 'sources',
            },
        ),
        migrations.CreateModel(
            name='RoutingRule',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('guid', models.CharField(default=uuid.uuid4, max_length=255)),
                ('sort_order', models.IntegerField()),
                ('parser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parser', to='parsers.parser')),
                ('route_to_parser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_to_parser', to='parsers.parser')),
            ],
            options={
                'db_table': 'routing_rules',
            },
        ),
        migrations.CreateModel(
            name='RoutingCondition',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('guid', models.CharField(default=uuid.uuid4, max_length=255)),
                ('operator', models.CharField(choices=[('EQUALS', 'EQUALS'), ('CONTAINS', 'CONTAINS'), ('IS_EMPTY', 'IS_EMPTY'), ('IS_NOT_EMPTY', 'IS_NOT_EMPTY')], max_length=255)),
                ('value', models.CharField(max_length=255, null=True)),
                ('sort_order', models.IntegerField()),
                ('routing_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parsers.routingrule')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parsers.rule')),
            ],
            options={
                'db_table': 'routing_conditions',
            },
        ),
        migrations.CreateModel(
            name='Queue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('guid', models.CharField(default=uuid.uuid4, max_length=255)),
                ('queue_class', models.CharField(choices=[('PROCESSED', 'PROCESSED'), ('IMPORT', 'IMPORT'), ('PREPROCESSING', 'PREPROCESSING'), ('SPLIT', 'SPLIT'), ('PARSING', 'PARSING'), ('POST_PROCESSING', 'POST_PROCESSING'), ('INTEGRATION', 'INTEGRATION')], max_length=255)),
                ('input_result', models.TextField(default='{}', null=True)),
                ('parsed_result', models.TextField(default='{}', null=True)),
                ('document', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document', to='parsers.document')),
                ('parser', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='parsers.parser')),
            ],
            options={
                'db_table': 'queues',
            },
        ),
        migrations.CreateModel(
            name='Header',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('guid', models.CharField(default=uuid.uuid4, max_length=256)),
                ('header', models.CharField(blank=True, default='', max_length=1024, null=True)),
                ('convert_to_table_by_specify_headers', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='headers', to='parsers.converttotablebyspecifyheaders')),
            ],
            options={
                'db_table': 'headers',
            },
        ),
        migrations.CreateModel(
            name='DocumentPage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('page_num', models.IntegerField()),
                ('image_file', models.FileField(max_length=1023, null=True, upload_to='')),
                ('width', models.IntegerField()),
                ('height', models.IntegerField()),
                ('xml', models.TextField()),
                ('document', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_pages', to='parsers.document')),
            ],
            options={
                'db_table': 'document_pages',
            },
        ),
        migrations.AddField(
            model_name='document',
            name='parser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parsers.parser'),
        ),
    ]
